# vllm-redhat-llama8b.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-llama8b
  namespace: vllm
spec:
  replicas: 1
  selector:
    matchLabels: { app: vllm-llama8b }
  template:
    metadata:
      labels: { app: vllm-llama8b }
    spec:
      imagePullSecrets:
        - name: rh-pull
      nodeSelector:
        kubernetes.azure.com/agentpool: "gpua10"
      tolerations:
        - key: "sku"
          operator: "Equal"
          value: "gpu"
          effect: "NoSchedule"
      containers:
        - name: vllm
          image: registry.redhat.io/rhaiis/vllm-cuda-rhel9:3.2.1
          args:
            - "--model"
            - "RedHatAI/Llama-3.1-8B-Instruct"
            - "--dtype"
            - "bfloat16"
            - "--max-model-len"
            - "8192"
            - "--download-dir"
            - "/models"
            - "--port"
            - "8000"
          env:
            - name: VLLM_WORKER_GPU_MEMORY_UTILIZATION
              value: "0.95"
            - name: HF_HUB_ENABLE_HF_TRANSFER
              value: "1"
            # Uncomment if you created a Hugging Face token secret:
            # - name: HF_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: hf
            #       key: HF_TOKEN
          ports:
            - name: http
              containerPort: 8000
          resources:
            requests:
              nvidia.com/gpu: 1
            limits:
              nvidia.com/gpu: 1
          volumeMounts:
            - name: model-cache
              mountPath: /models
          readinessProbe:
            httpGet:
              path: /v1/models
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 24
      volumes:
        - name: model-cache
          persistentVolumeClaim:
            claimName: vllm-model-cache
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-llama8b
  namespace: vllm
spec:
  type: LoadBalancer
  selector: { app: vllm-llama8b }
  ports:
    - name: http
      port: 8000
      targetPort: http
